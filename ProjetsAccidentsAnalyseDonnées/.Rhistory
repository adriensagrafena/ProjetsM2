"Sans collision"))
v <- which(victime$col == "Non renseigné")
victime <- victime[-v,]
victime$catu <- factor(victime$catu, labels = c("Conducteur",
"Passager",
"Piéton"))
victime$grav <- factor(victime$grav, labels = c("Indemne",
"Tué",
"Blessé hospitalisé",
"Blessé léger" ))
victime$sexe <- factor(victime$sexe, labels = c("Masculin",
"Féminin" ))
victime$trajet <- factor(victime$trajet, labels = c("Autre",
"Autre",
"Domicile – travail",
"Domicile – école",
"Courses – achats",
"Utilisation professionnelle",
"Promenade – loisirs",
"Autre" ))
victime$place <- factor(victime$place, labels = c("Conducteur",
"Passager Avant",
"Passager",
"Passager",
"Passager",
"Passager Avant",
"Passager",
"Passager",
"Passager",
"Piéton"))
# Ajout d'une variable correspondant au nombre de véhicules impliqués dans
# l'accident
victime %>%
group_by(Num_Acc)%>%
summarize(nb_veh=n_distinct(id_vehicule)) -> data
victime <- inner_join(victime, data, by = "Num_Acc")
# Ajout d'une variable correspondant au nombre de personnes impliquées dans
# l'accident
data <- as.data.frame(table(victime$Num_Acc))
colnames(data) <- c("Num_Acc", "nb_ind")
victime <- inner_join(victime, data, by = "Num_Acc")
# Ajout d'une variable correspondant à l'âge des individus
victime$age <- 2019 - victime$an_nais
# Suppression de la variable an_nais
victime$an_nais <- NULL
str(victime)
summary(victime)
## Valeurs manquantes et aberrantes
# On cherche les valeurs manquantes
sapply(victime, function(x) sum(is.na(x)))
# Aucune valeur manquante
# On cherche les valeurs aberrantes
table(victime$age, victime$catu)
# On remarque un problème au niveau de l'âge des conducteurs
# + bcp trop de personnes de plus de 100ans
# On "autorise" des conducteurs de plus de 16 ans et les personnes de moins de 100 ans
cond_min <- which((victime$age < 16) & (victime$catu == "Conducteur"))
vieux <- which((victime$age > 100))
victime <- victime[-c(cond_min,vieux),]
table(victime$age, victime$catu)
# début ACM
dtf<-victime[,c(4,7:10,13:16)]  # on garde lum,agg,int,atm,col,place,grav,sexe,trajet
# on enleve catu qui fait doublon avec place en étant moins précis
res.acm<-MCA(dtf,ncp=9,graph=FALSE,quali.sup=7)
var<-get_mca_var(res.acm)
ind<-get_mca_ind(res.acm)
kable(round(var$v.test,digits=2),format="simple")
var$v.test
var$v.test
which(dtf$place="Piéton")
which(dtf$place=="Piéton")
nrows(which(dtf$place=="Piéton"))/1322977
length(which(dtf$place=="Piéton"))/1322977
41/9
-1
res.acm$svd
install.packages(c("broom", "datawizard", "DEoptimR", "emmeans", "gert", "htmlTable", "httpuv", "multcomp", "raster", "RcppParallel", "shinyjs"))
gc()
gc()
# effacer les objets de l'environnement
rm(list = ls())
# bibliotheques
library("tidyverse")
library('stringr')
library('kableExtra')
library("lubridate")
library("ggplot2")
library("questionr")
library("FactoMineR")
library("factoextra")
# bibliotheques
library("tidyverse")
library('stringr')
library('kableExtra')
library("lubridate")
library("ggplot2")
library("questionr")
library("FactoMineR")
library("factoextra")
# pour Adrien :
setwd("~/AnalyseDonnees")
### Import des données et choix des variables
carac <- read.csv2(file="caracteristiques-2019.csv")
var_carac <- c("Num_Acc","jour","mois","hrmn","lum","dep","com","agg","int","atm","col")
carac <- carac[,var_carac]
str(carac)
usagers <- read.csv2(file="usagers-2019.csv")
var_usagers <- c("Num_Acc","id_vehicule","catu","place", "grav","sexe","an_nais","trajet")
usagers <- usagers[,var_usagers]
str(usagers)
## Jointure des jeux de données
victime <- inner_join(carac, usagers, by ="Num_Acc")
victime$date <- paste(victime$jour, victime$mois,"2019", sep = "/")
victime$date <- as.Date(victime$date,format="%d/%m/%Y")
victime <- victime[,-c(2,3)]
victime <- relocate(victime, "date", .after = "Num_Acc")
str(victime)
# Changement du type des variables + Ajout label
victime$Num_Acc <- as.character(victime$Num_Acc)
victime$lum <- factor(victime$lum, labels = c("Plein jour", "Crépuscule ou aube",
"Nuit sans éclairage public",
"Nuit avec éclairage public non allumé",
"Nuit avec éclairage public allumé"))
victime$agg <- factor(victime$agg, labels = c("Hors agglomération", "En agglomération"))
victime$int <- factor(victime$int, labels = c("Hors intersection",
"Intersection en X",
"Intersection en T",
"Intersection en Y",
"Intersection à plus de 4 branches",
"Giratoire",
"Place",
"Passage à niveau",
"Autre intersection"))
victime$atm <- factor(victime$atm, labels = c("Non renseigné" ,
"Normale" ,
"Pluie légère",
"Pluie forte",
"Neige - Grêle",
"Brouillard - Fumée",
"Vent fort - Tempête",
"Temps éblouissant",
"Temps couvert",
"Temps couvert"))
v <- which(victime$atm == "Non renseigné")
victime <- victime[-v,]
victime$col <- factor(victime$col, labels = c("Non renseigné",
"Deux véhicules - frontale",
"Deux véhicules - par l'arrière",
"Deux véhicules - par le côté",
"Trois véhicules et plus - en chaîne",
"Trois véhicules et plus - collisions multiples",
"Autre collision",
"Sans collision"))
v <- which(victime$col == "Non renseigné")
victime <- victime[-v,]
victime$catu <- factor(victime$catu, labels = c("Conducteur",
"Passager",
"Piéton"))
victime$grav <- factor(victime$grav, labels = c("Indemne",
"Tué",
"Blessé hospitalisé",
"Blessé léger" ))
victime$sexe <- factor(victime$sexe, labels = c("Masculin",
"Féminin" ))
victime$trajet <- factor(victime$trajet, labels = c("Autre",
"Autre",
"Domicile – travail",
"Domicile – école",
"Courses – achats",
"Utilisation professionnelle",
"Promenade – loisirs",
"Autre" ))
victime$place <- factor(victime$place, labels = c("Conducteur",
"Passager Avant",
"Passager",
"Passager",
"Passager",
"Passager Avant",
"Passager",
"Passager",
"Passager",
"Piéton"))
# Ajout d'une variable correspondant au nombre de véhicules impliqués dans
# l'accident
victime %>%
group_by(Num_Acc)%>%
summarize(nb_veh=n_distinct(id_vehicule)) -> data
victime <- inner_join(victime, data, by = "Num_Acc")
# Ajout d'une variable correspondant au nombre de personnes impliquées dans
# l'accident
data <- as.data.frame(table(victime$Num_Acc))
colnames(data) <- c("Num_Acc", "nb_ind")
victime <- inner_join(victime, data, by = "Num_Acc")
# Ajout d'une variable correspondant à l'âge des individus
victime$age <- 2019 - victime$an_nais
# Suppression de la variable an_nais
victime$an_nais <- NULL
str(victime)
summary(victime)
## Valeurs manquantes et aberrantes
# On cherche les valeurs manquantes
sapply(victime, function(x) sum(is.na(x)))
# On cherche les valeurs aberrantes
table(victime$age, victime$catu)
# On "autorise" des conducteurs de plus de 16 ans et les personnes de moins de 100 ans
cond_min <- which((victime$age < 16) & (victime$catu == "Conducteur"))
vieux <- which((victime$age > 100))
victime <- victime[-c(cond_min,vieux),]
table(victime$age, victime$catu)
victime %>%
group_by(date)%>%
summarize(nb_accidents=n_distinct(Num_Acc))%>%
mutate(nom_jour=wday(date,label=TRUE,week_start=1,abbr=FALSE,locale=Sys.getlocale("LC_TIME")),
num_jour_mois=day(date),
nom_mois=month(date,label=TRUE,abbr=FALSE,locale=Sys.getlocale("LC_TIME")),
num_semaine_an=isoweek(date))%>%
group_by(nom_mois)%>%
mutate(num_semaine_mois=case_when(nom_mois=="décembre" & num_semaine_an==1~6,
nom_mois=="décembre" & num_semaine_an!=1~num_semaine_an-48+1, # parce que les 2 derniers jours de décembre posent souci
TRUE~num_semaine_an-min(num_semaine_an)+1)
)->calend
rm(calend)
dtf<-victime[,c(4,7:10,13:16)]  # on garde lum,agg,int,atm,col,place,grav,sexe,trajet
row.names(dtf)<-1:131727
gc()
res.acm<-MCA(dtf,ncp=9,graph=FALSE,quali.sup=7) # on retrouve une structure de trèfle à 4 feuilles
res.acm<-MCA(dtf,graph=FALSE,quali.sup=7) # on retrouve une structure de trèfle à 4 feuilles
infg<-length(which(ind$coord[,1]<0 & ind$coord[,2]<0)) # inf gauch
# nombre d'ind par quadrant
ind<-get_mca_ind(res.acm)
var<-get_mca_var(res.acm)
infg<-length(which(ind$coord[,1]<0 & ind$coord[,2]<0)) # inf gauch
supg<-length(which(ind$coord[,1]<0 & ind$coord[,2]>0)) # sup gauch
supd<-length(which(ind$coord[,1]>0 & ind$coord[,2]>0)) # sup droit
infd<-length(which(ind$coord[,1]>0 & ind$coord[,2]<0)) # inf droit
table(dtf[infg,])
length(infg)
infg<-which(ind$coord[,1]<0 & ind$coord[,2]<0) # inf gauch
supg<-which(ind$coord[,1]<0 & ind$coord[,2]>0) # sup gauch
supd<-which(ind$coord[,1]>0 & ind$coord[,2]>0) # sup droit
infd<-which(ind$coord[,1]>0 & ind$coord[,2]<0) # inf droit
length(infg)
fviz_mca_var(res.acm)
fviz_mca_var(res.acm,repel=TRUE)
View(dtf)
z<-which(dtf[,5]=="Autre collision")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z)))
z<-which(dtf[,5] %in% c("Collision deux véhicules - frontale ou arrière","Trois véhicules et plus - collisions multiples","Trois véhicules et plus - en chaîne"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z)))
z<-which(dtf[,5] %in% c("Deux véhicules - frontale","Deux véhicules - arrière","Trois véhicules et plus - collisions multiples","Trois véhicules et plus - en chaîne"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z)))
dtf[z,]
fviz_mca_var(res.acm,repel=TRUE)
z<-which(dtf[,6]=="Conducteur")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z)))
z1<-which(dtf[,6]=="Piéton")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z1)))
z2<-which(dtf[,6]=="Passager")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z2)))
z3<-which(dtf[,6]=="Passager" | dtf[,6]=="Passager Avant")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z3)))
k<-which(dtf[,])
k<-which(dtf[,8]=="Masculin")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(k)))
l<-which(dtf[,7]=="Indemne")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l)))
l1<-which(dtf[,7]=="Blessé")
l2<-which(dtf[,7]=="Blessé hospitalisé")
l3<-which(dtf[,7]=="Tué")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l1)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l1)))
l1<-which(dtf[,7]=="Blessé leger")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l1)))
l1<-which(dtf[,7]=="Blessé léger")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l1)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l2)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l3)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(l2,l3)))
t<-which(dtf[,atm] %in% c("Neige - Grêle","Brouillard - Fumée","Vent fort - Tempête","Pluie forte"))
t<-which(dtf[,4] %in% c("Neige - Grêle","Brouillard - Fumée","Vent fort - Tempête","Pluie forte"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(t)))
tn<-which(dtf[,atm] %in% c("Temps éblouissant", "Temps couvert","Pluie légère"))
tn<-which(dtf[,4] %in% c("Temps éblouissant", "Temps couvert","Pluie légère"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(tn)))
tn<-which(dtf[,4] %in% c("Temps éblouissant", "Temps couvert"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(tn)))
tn<-which(dtf[,4] %in% c("Temps couvert"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(tn)))
t<-which(dtf[,atm] %in% c("Neige - Grêle","Brouillard - Fumée","Vent fort - Tempête","Pluie forte"))
t<-which(dtf[,4] %in% c("Neige - Grêle","Brouillard - Fumée","Vent fort - Tempête","Pluie forte"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(t)))
t<-which(dtf[,4] %in% c("Brouillard - Fumée","Vent fort - Tempête"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(t)))
t2<-which(dtf[,4] %in% c("Neige - Grêle","Brouillard - Fumée","Vent fort - Tempête"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(t2)))
f<-which(dtf[,sexe]="Féminin")
f<-which(dtf[,sexe]=="Féminin")
f<-which(dtf[,8]=="Féminin")
m<-which(dtf[,8]=="Masculin")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(m)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(f)))
table(dtf$place,dtf$grav)
z<-which(dtf[,7]=="Tué")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z)))
z1<-which(dtf[,7]=="Blessé hospitalisé")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z1)))
z2<-which(dtf[,7]=="Blessé léger")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z2)))
z3<-which(dtf[,7]=="Indemne")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z3)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z)))
z1<-which(dtf[,7]=="Blessé hospitalisé")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z1)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z1,z2)))
z1<-which(dtf[,7]=="Blessé hospitalisé")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z1)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z1)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z2)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(z,z1)))
e<-which(dtf[,9]="Domicile - école")
e<-which(dtf[,9]=="Domicile - école")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(e)))
e<-which(dtf[,9]=="Domicile -école")
unique(dtf$trajet)
e<-which(dtf[,9]=="Domicile – école")
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(e)))
e<-which(dtf[,9]=="Domicile – école","Course - achats")
e<-which(dtf[,9] %in% c("Domicile – école","Course - achats"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(e)))
e<-which(dtf[,9] %in% c("Domicile – école","Courses - achats"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(e)))
e<-which(dtf[,9] %in% c("Domicile – école","Courses – achats"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(e)))
e<-which(dtf[,9] %in% c("Promenade – loisirs"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(e)))
e<-which(dtf[,9] %in% c("Autre"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(e)))
p<-which(dtf[,1] %in% c("Plein jour"))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(p)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(h)))
fviz_mca_biplot(res.acm,geom.ind=c("point"),geom.var = c("point", "text"),
select.ind=list(name=as.character(m)))
# bibliotheques
library("tidyverse")
library('stringr')
library('kableExtra')
library("lubridate")
library("ggplot2")
library("questionr")
library("FactoMineR")
library("factoextra")
# pour Adrien :
setwd("~/AnalyseDonnees")
### Import des données et choix des variables
carac <- read.csv2(file="caracteristiques-2019.csv")
var_carac <- c("Num_Acc","jour","mois","hrmn","lum","dep","com","agg","int","atm","col")
carac <- carac[,var_carac]
str(carac)
usagers <- read.csv2(file="usagers-2019.csv")
var_usagers <- c("Num_Acc","id_vehicule","catu","place", "grav","sexe","an_nais","trajet")
usagers <- usagers[,var_usagers]
str(usagers)
## Jointure des jeux de données
victime <- inner_join(carac, usagers, by ="Num_Acc")
victime$date <- paste(victime$jour, victime$mois,"2019", sep = "/")
victime$date <- as.Date(victime$date,format="%d/%m/%Y")
victime <- victime[,-c(2,3)]
victime <- relocate(victime, "date", .after = "Num_Acc")
str(victime)
# Changement du type des variables + Ajout label
victime$Num_Acc <- as.character(victime$Num_Acc)
victime$lum <- factor(victime$lum, labels = c("Plein jour", "Crépuscule ou aube",
"Nuit sans éclairage public",
"Nuit avec éclairage public non allumé",
"Nuit avec éclairage public allumé"))
victime$agg <- factor(victime$agg, labels = c("Hors agglomération", "En agglomération"))
victime$int <- factor(victime$int, labels = c("Hors intersection",
"Intersection en X",
"Intersection en T",
"Intersection en Y",
"Intersection à plus de 4 branches",
"Giratoire",
"Place",
"Passage à niveau",
"Autre intersection"))
victime$atm <- factor(victime$atm, labels = c("Non renseigné" ,
"Normale" ,
"Pluie légère",
"Pluie forte",
"Neige - Grêle",
"Brouillard - Fumée",
"Vent fort - Tempête",
"Temps éblouissant",
"Temps couvert",
"Temps couvert"))
v <- which(victime$atm == "Non renseigné")
victime <- victime[-v,]
victime$col <- factor(victime$col, labels = c("Non renseigné",
"Deux véhicules - frontale",
"Deux véhicules - par l'arrière",
"Deux véhicules - par le côté",
"Trois véhicules et plus - en chaîne",
"Trois véhicules et plus - collisions multiples",
"Autre collision",
"Sans collision"))
v <- which(victime$col == "Non renseigné")
victime <- victime[-v,]
victime$catu <- factor(victime$catu, labels = c("Conducteur",
"Passager",
"Piéton"))
victime$grav <- factor(victime$grav, labels = c("Indemne",
"Tué",
"Blessé hospitalisé",
"Blessé léger" ))
victime$sexe <- factor(victime$sexe, labels = c("Masculin",
"Féminin" ))
victime$trajet <- factor(victime$trajet, labels = c("Autre",
"Autre",
"Domicile – travail",
"Domicile – école",
"Courses – achats",
"Utilisation professionnelle",
"Promenade – loisirs",
"Autre" ))
victime$place <- factor(victime$place, labels = c("Conducteur",
"Passager Avant",
"Passager",
"Passager",
"Passager",
"Passager Avant",
"Passager",
"Passager",
"Passager",
"Piéton"))
# Ajout d'une variable correspondant au nombre de véhicules impliqués dans
# l'accident
victime %>%
group_by(Num_Acc)%>%
summarize(nb_veh=n_distinct(id_vehicule)) -> data
victime <- inner_join(victime, data, by = "Num_Acc")
# Ajout d'une variable correspondant au nombre de personnes impliquées dans
# l'accident
data <- as.data.frame(table(victime$Num_Acc))
colnames(data) <- c("Num_Acc", "nb_ind")
victime <- inner_join(victime, data, by = "Num_Acc")
# Ajout d'une variable correspondant à l'âge des individus
victime$age <- 2019 - victime$an_nais
# Suppression de la variable an_nais
victime$an_nais <- NULL
str(victime)
summary(victime)
## Valeurs manquantes et aberrantes
# On cherche les valeurs manquantes
sapply(victime, function(x) sum(is.na(x)))
# On cherche les valeurs aberrantes
table(victime$age, victime$catu)
# On "autorise" des conducteurs de plus de 16 ans et les personnes de moins de 100 ans
cond_min <- which((victime$age < 16) & (victime$catu == "Conducteur"))
vieux <- which((victime$age > 100))
victime <- victime[-c(cond_min,vieux),]
table(victime$age, victime$catu)
table(dtf$sexe,dtf$grav)
dtf<-victime[,c(4,7:10,13:16)]# on garde lum,agg,int,atm,col,place,grav,sexe,trajet
row.names(dtf)<-1:131727
table(dtf$sexe,dtf$grav)
unique(dtf$sexe)
table(dtf$sexe)
