library("xml2")
library("readr")
library("lubridate")
library("tidyverse")
library("stringr")
library("tidytext")
library("shiny")
setwd("~/projet-rss")
data_text <- read_delim("data/data_text.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# mot par auteur: autre solution ici
# ou prendre le programme que j'ai déjà fait avec countwordV1 ou V1b
# en novembre, ça marche aussi
## TRANSFORMATION DU DATAFRAME: GESTION DES DATES de data_txt
prev<- Sys.getlocale("LC_TIME") # pour éviter des ennuis de conversion pénibles
Sys.setlocale("LC_TIME", "C")   # on passe de "French_France.1252" à "C"
data_text$date=strptime(data_text$date,format ="%B %d, %Y")
Sys.setlocale("LC_TIME", prev)  # retour système local
# j'ajoute les colonnes sans supprimer celle de la date formatée: les dataframes
# sont un peu plus lourds mais ça passe!
data_text%>%
mutate(
jour=wday(date,label = TRUE,abbr = FALSE ,week_start = "1",locale = Sys.getlocale("LC_TIME")),
mois=month(date,label=TRUE,abbr=FALSE,locale = Sys.getlocale("LC_TIME")),
annee=year(date)
)->data_text
ui=fluidPage(
tabsetPanel(
tabPanel("Par an", fluid = TRUE,
sidebarLayout(
sidebarPanel(textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots ")),
mainPanel(echarts4rOutput("anneeplot"))
)
),
tabPanel("par mois", fluid = TRUE,
sidebarLayout(
sidebarPanel(textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots "),
sliderInput("annee", label = "Choix de l'année",
min = 2008, max = 2021,value=2015 ,step = 1),width=3),
mainPanel(echarts4rOutput("moisplot"))
)
),
tabPanel("par auteur", fluid = TRUE,
sidebarLayout(
sidebarPanel(textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots "),
selectizeInput("author", label = "Choix de l'auteur",
choices = unique(sort(data_text$author)),
selected = "Antoine Guillot")
),
mainPanel(echarts4rOutput("authorplot"))
)
)
)
)
mycolor <- c("#2780e3","#003636","#a9a9a9", "#91c8c8")
server <- function(input, output, session) {
output$anneeplot = renderEcharts4r({
data_text%>%
select(annee,text)%>%
group_by(annee)%>%
mutate(comptage=str_count(text,regex(input$mot,ignore_case = TRUE)))%>%
summarise(total=sum(comptage,na.rm=TRUE))%>%
e_charts(annee) %>%
e_bar(serie = total) %>%
e_title(text = "Occurrences du mot par an",
subtext = "Quantité",
sublink = "#",
left = "left", top = 4
) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list(      show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"
))
) %>%
e_x_axis(serie=annee,splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis")  %>% e_color(mycolor) })
output$moisplot = renderEcharts4r({
data_text%>%
select(annee,mois,text)%>%
filter(annee==input$annee)%>%
group_by(mois)%>%
mutate(comptage=str_count(text,regex(input$mot,ignore_case = TRUE)))%>%
summarise(total=sum(comptage,na.rm=TRUE))%>%
mutate(mois=as.character(mois))%>%
# indispensable de le faire ici et pas dans le précédent mutate
# sinon on perd l'ordre des facteurs et les mois se retrouvent ds
# un ordre anarchique dans le graphique
e_charts(mois) %>%
e_bar(serie = total) %>%
e_title(text = "Occurrences du mot par mois",
subtext = "Quantité",
sublink = "#",
left = "left", top = 4
) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list(      show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"
))
) %>%
e_x_axis(splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis")  %>% e_color(mycolor) })
output$authorplot = renderEcharts4r({
data_text%>%
select(annee,author,text)%>%
filter(author==regex(input$author,ignore_case=TRUE))%>%
group_by(annee)%>%
mutate(comptage=str_count(text,regex(input$mot,ignore_case = TRUE)))%>%
summarise(total=sum(comptage,na.rm=TRUE))%>%
e_charts(annee) %>%
e_bar(serie = total) %>%
e_title(text = "Occurrences d'un mot chez un auteur",
subtext = "Quantité",
sublink = "#",
left = "left", top = 4
) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list(      show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"
))
) %>%
e_x_axis(serie=annee, splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0),
margin=1)%>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis")  %>% e_color(mycolor) })
}
shinyApp(ui = ui, server = server)
prev
library("rmarkdown")
library("flexdashboard")
library("plotly")
library("knitr")
library("echarts4r")
library("xml2")
library("readr")
library("lubridate")
library("tidyverse")
library("stringr")
library("tidytext")
library("shiny")
library(rvest)
library(DT)
library(tidyverse)
data_text <- read_delim("data/data_text.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
data <- read_delim("data/data.csv",
delim = ",",
escape_double = FALSE, trim_ws = TRUE)
prev<- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
data_text$date=strptime(data_text$date,format ="%B %d, %Y")
data$date=strptime(data$date,format ="%B %d, %Y")
data_text%>%
mutate(
jour=wday(date,label = TRUE,abbr = FALSE ,week_start = "1",locale = Sys.getlocale("LC_TIME")),
mois=month(date,label=TRUE,abbr=FALSE,locale = Sys.getlocale("LC_TIME")),
annee=year(date)
)->data_text
Sys.setlocale("LC_TIME", prev)  # retour système local
data%>%
mutate(
jour=wday(date,label = TRUE,abbr = FALSE ,week_start = "1",locale = Sys.getlocale("LC_TIME")),
mois=month(date,label=TRUE,abbr=FALSE,locale = Sys.getlocale("LC_TIME")),
annee=year(date)
)->data
mycolor <- c("#2780e3","#003636","#a9a9a9", "#91c8c8")
library("rmarkdown")
library("flexdashboard")
library("plotly")
library("knitr")
library("echarts4r")
library("xml2")
library("readr")
library("lubridate")
library("tidyverse")
library("stringr")
library("tidytext")
library("shiny")
library(rvest)
library(DT)
library(tidyverse)
data_text <- read_delim("data/data_text.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
data <- read_delim("data/data.csv",
delim = ",",
escape_double = FALSE, trim_ws = TRUE)
prev<- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
data_text$date=strptime(data_text$date,format ="%B %d, %Y")
data$date=strptime(data$date,format ="%B %d, %Y")
data_text%>%
mutate(
jour=wday(date,label = TRUE,abbr = FALSE ,week_start = "1",locale = Sys.getlocale("LC_TIME")),
mois=month(date,label=TRUE,abbr=FALSE,locale = Sys.getlocale("LC_TIME")),
annee=year(date)
)->data_text
Sys.setlocale("LC_TIME", prev)  # retour système local
data%>%
mutate(
jour=wday(date,label = TRUE,abbr = FALSE ,week_start = "1",locale = Sys.getlocale("LC_TIME")),
mois=month(date,label=TRUE,abbr=FALSE,locale = Sys.getlocale("LC_TIME")),
annee=year(date)
)->data
mycolor <- c("#2780e3","#003636","#a9a9a9", "#91c8c8")
View(data_text)
library("rmarkdown")
library("flexdashboard")
library("ggplot2")
library("ggplot2")
library("plotly")
library("ggplot2")
library("plotly")
library("knitr")
library("xml2")
library("readr")
library("lubridate")
library("tidyverse")
library("tidyverse")
library("stringr")
library("tidytext")
library("tidyverse")
library("stringr")
library("tidytext")
library("shiny")
setwd("~/projet-rss")
data_text <- read_delim("data/data_text.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
prev<- Sys.getlocale("LC_TIME") # pour éviter des ennuis de conversion pénibles
Sys.setlocale("LC_TIME", "C")   # on passe de "French_France.1252" à "C"
data_text$date=strptime(data_text$date,format ="%B %d, %Y")
Sys.setlocale("LC_TIME", prev)  # retour système local
data_text%>%
mutate(
jour=wday(date,label = TRUE,abbr = FALSE ,week_start = "1",locale = Sys.getlocale("LC_TIME")),
mois=month(date,label=TRUE,abbr=FALSE,locale = Sys.getlocale("LC_TIME")),
annee=year(date)
)->data_text
```{r}
ui=fluidPage(
tabsetPanel(
tabPanel("Par an", fluid = TRUE,
sidebarLayout(
sidebarPanel(textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots ")),
mainPanel(echarts4rOutput("anneeplot"))
)
),
tabPanel("par mois", fluid = TRUE,
sidebarLayout(
sidebarPanel(textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots "),
sliderInput("annee", label = "Choix de l'année",
min = 2008, max = 2021,value=2015 ,step = 1),width=3),
mainPanel(echarts4rOutput("moisplot"))
)
),
tabPanel("par auteur", fluid = TRUE,
sidebarLayout(
sidebarPanel(textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots "),
selectizeInput("author", label = "Choix de l'auteur",
choices = unique(sort(data_text$author)),
selected = "Antoine Guillot")
),
mainPanel(echarts4rOutput("authorplot"))
)
)
)
)
shinyApp(ui = ui, server = server)
library("echarts4r")
library("rmarkdown")
library("flexdashboard")
library("ggplot2")
library("plotly")
library("knitr")
library("echarts4r")
library("xml2")
library("readr")
library("lubridate")
library("tidyverse")
library("stringr")
library("tidytext")
library("shiny")
setwd("~/projet-rss")
data_text <- read_delim("data/data_text.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# mot par auteur: autre solution ici
# ou prendre le programme que j'ai déjà fait avec countwordV1 ou V1b
# en novembre, ça marche aussi
## TRANSFORMATION DU DATAFRAME: GESTION DES DATES de data_txt
prev<- Sys.getlocale("LC_TIME") # pour éviter des ennuis de conversion pénibles
Sys.setlocale("LC_TIME", "C")   # on passe de "French_France.1252" à "C"
data_text$date=strptime(data_text$date,format ="%B %d, %Y")
Sys.setlocale("LC_TIME", prev)  # retour système local
# j'ajoute les colonnes sans supprimer celle de la date formatée: les dataframes
# sont un peu plus lourds mais ça passe!
data_text%>%
mutate(
jour=wday(date,label = TRUE,abbr = FALSE ,week_start = "1",locale = Sys.getlocale("LC_TIME")),
mois=month(date,label=TRUE,abbr=FALSE,locale = Sys.getlocale("LC_TIME")),
annee=year(date)
)->data_text
ui = fluidPage(
sidebarLayout(sidebarPanel(selectizeInput("author", label = "Choix de l'auteur",
choices = unique(sort(data_text$author)),
selected = "Antoine Guillot"),
textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots "),width=3),
mainPanel(echarts4rOutput("authorplot"))))
ui = fluidPage(
sidebarLayout(sidebarPanel(selectizeInput("author", label = "Choix de l'auteur",
choices = unique(sort(data_text$author)),
selected = "Antoine Guillot"),
textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots "),width=3),
mainPanel(echarts4rOutput("authorplot"))))
ui = fluidPage(
sidebarLayout(sidebarPanel(selectizeInput("author", label = "Choix de l'auteur",
choices = unique(sort(data_text$author)),
selected = "Antoine Guillot"),
textInput("mot",label="Choix du mot/de l'expression",
value = "data",width=NULL,
placeholder = "merci d'entrer un mot ou un groupe de mots "),width=3),
mainPanel(echarts4rOutput("authorplot"))))
server = function(input, output) {
}
mycolor <- c("#2780e3","#003636","#a9a9a9", "#91c8c8")
server <- function(input, output, session) {
output$anneeplot = renderEcharts4r({
data_text%>%
select(annee,text)%>%
group_by(annee)%>%
mutate(comptage=str_count(text,regex(input$mot,ignore_case = TRUE)))%>%
summarise(total=sum(comptage,na.rm=TRUE))%>%
e_charts(annee) %>%
e_bar(serie = total) %>%
e_title(text = "Occurrences du mot par an",
subtext = "Quantité",
sublink = "#",
left = "left", top = 4
) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list(      show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"
))
) %>%
e_x_axis(serie=annee,splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis")  %>% e_color(mycolor) })
output$moisplot = renderEcharts4r({
data_text%>%
select(annee,mois,text)%>%
filter(annee==input$annee)%>%
group_by(mois)%>%
mutate(comptage=str_count(text,regex(input$mot,ignore_case = TRUE)))%>%
summarise(total=sum(comptage,na.rm=TRUE))%>%
mutate(mois=as.character(mois))%>%
# indispensable de le faire ici et pas dans le précédent mutate
# sinon on perd l'ordre des facteurs et les mois se retrouvent ds
# un ordre anarchique dans le graphique
e_charts(mois) %>%
e_bar(serie = total) %>%
e_title(text = "Occurrences du mot par mois",
subtext = "Quantité",
sublink = "#",
left = "left", top = 4
) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list(      show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"
))
) %>%
e_x_axis(splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis")  %>% e_color(mycolor) })
output$authorplot = renderEcharts4r({
data_text%>%
select(annee,author,text)%>%
filter(author==regex(input$author,ignore_case=TRUE))%>%
group_by(annee)%>%
mutate(comptage=str_count(text,regex(input$mot,ignore_case = TRUE)))%>%
summarise(total=sum(comptage,na.rm=TRUE))%>%
e_charts(annee) %>%
e_bar(serie = total) %>%
e_title(text = "Occurrences d'un mot chez un auteur",
subtext = "Quantité",
sublink = "#",
left = "left", top = 4
) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list(      show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"
))
) %>%
e_x_axis(serie=annee, splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0),
margin=1)%>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis")  %>% e_color(mycolor) })
}
shinyApp(ui = ui, server = server)
setwd("~/ProjetsM2/Dashboards/FlexDash+Shiny")
setwd("~/ProjetsM2/Dashboards/FlexDash+Shiny")
setwd("~/ProjetsM2/Dashboards/FlexDash+Shiny")
getwd
getwd()
library("rmarkdown")
library("flexdashboard")
library("ggplot2")
library("plotly")
library("knitr")
library("echarts4r")
library("xml2")
library("readr")
library("lubridate")
library("tidyverse")
library("stringr")
library("tidytext")
library("shiny")
setwd("~/ProjetsM2/Dashboards/FlexDash+Shiny")
data_text <- read_delim("data/data_text.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
